name: Build On Push

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{matrix.os}}
    name: Build
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Windows
            os: windows-latest
            cmake_flags: -DBANANA_BUILD_EXAMPLES=ON
            examples: >
              agent-default-blocking agent-winapi-blocking agent-any-blocking agent-beast-blocking
              agent-beast-async
              agent-default-async agent-winapi-async
              generic-api-call
            binary_path: "example/bin/banana-example-$name.exe"
            packages: |
              pip install conan

          - name: Linux
            os: ubuntu-latest
            cmake_flags: -DBANANA_BUILD_EXAMPLES=ON -DBANANA_EXAMPLES_ENABLE_CORO=ON -DCMAKE_CXX_COMPILER=g++-10 -DCMAKE_CXX_FLAGS=-fcoroutines
            examples: >
              agent-default-blocking agent-cpr-blocking agent-any-blocking agent-beast-blocking
              agent-beast-async
              agent-default-async agent-cpr-async
              agent-beast-coro
              custom-agent-blocking
              generic-api-call
            binary_path: "example/bin/banana-example-$name"
            packages: |
              sudo apt-get install libssl-dev g++-10 curl
              pip install conan

          - name: macOS
            os: macos-latest
            cmake_flags: -DBANANA_BUILD_EXAMPLES=ON
            examples: >
              agent-default-blocking agent-cpr-blocking agent-any-blocking agent-beast-blocking
              agent-beast-async
              agent-default-async agent-cpr-async
              custom-agent-blocking
              generic-api-call
            binary_path: "example/bin/banana-example-$name"
            packages: |
              brew install openssl conan curl

          - name: Linux (bundled cpr)
            os: ubuntu-latest
            cmake_flags: -DBANANA_BUILD_EXAMPLES=ON -DBANANA_USE_BUNDLED_CPR=ON
            examples: >
              agent-default-blocking agent-cpr-blocking
              agent-default-async agent-cpr-async
              generic-api-call
            binary_path: "example/bin/banana-example-$name"
            packages: |
              sudo apt-get install libssl-dev
              pip install conan

    steps:
      - uses: actions/checkout@v2

      - name: Install python
        uses: actions/setup-python@v2
        with:
          python-version: '3.7'

      - name: Install dependencies
        run: ${{matrix.packages}}
        if: ${{matrix.packages}}

      - name: Create Build Environment
        run: cmake -E make_directory ${{github.workspace}}/build

      - name: Configure CMake
        shell: bash
        working-directory: ${{github.workspace}}/build
        run: |
          cmake .. -DCMAKE_BUILD_TYPE=Debug ${{matrix.cmake_flags}}

      - name: Build and run banana examples
        working-directory: ${{github.workspace}}/build
        shell: bash
        run: |
          for name in $(echo "${{matrix.examples}}" | tr " " "\n")
          do
            cmake --build . --config Debug --target banana-example-${name}
            binary_path="$(eval echo ${{matrix.binary_path}})"
            ${binary_path} "${{secrets.TG_TEST_BOT_TOKEN}}" "${{secrets.TG_TEST_USER}}" "${name}" "${{matrix.name}}"
          done
